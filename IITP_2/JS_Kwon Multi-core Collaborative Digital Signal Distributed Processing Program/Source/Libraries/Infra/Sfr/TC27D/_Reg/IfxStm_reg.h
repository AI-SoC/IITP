/**
 * \file IfxStm_reg.h
 * \brief
 * \copyright Copyright (c) 2016 Infineon Technologies AG. All rights reserved.
 *
 * Version: TC27XD_UM_V2.2.R1
 * Specification: tc27xD_um_v2.2_SFR.xml (Revision: UM_V2.2)
 * MAY BE CHANGED BY USER [yes/no]: No
 *
 *                                 IMPORTANT NOTICE
 *
 * Use of this file is subject to the terms of use agreed between (i) you or
 * the company in which ordinary course of business you are acting and (ii)
 * Infineon Technologies AG or its licensees. If and as long as no such terms
 * of use are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer, must
 * be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are
 * solely in the form of machine-executable object code generated by a source
 * language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 * \defgroup IfxLld_Stm_Cfg Stm address
 * \ingroup IfxLld_Stm
 * 
 * \defgroup IfxLld_Stm_Cfg_BaseAddress Base address
 * \ingroup IfxLld_Stm_Cfg
 * 
 * \defgroup IfxLld_Stm_Cfg_Stm0 2-STM0
 * \ingroup IfxLld_Stm_Cfg
 * 
 * \defgroup IfxLld_Stm_Cfg_Stm1 2-STM1
 * \ingroup IfxLld_Stm_Cfg
 * 
 * \defgroup IfxLld_Stm_Cfg_Stm2 2-STM2
 * \ingroup IfxLld_Stm_Cfg
 * 
 */
#ifndef IFXSTM_REG_H
#define IFXSTM_REG_H 1
/******************************************************************************/
#include "IfxStm_regdef.h"
/******************************************************************************/
/** \addtogroup IfxLld_Stm_Cfg_BaseAddress
 * \{  */

/** \brief  STM object */
#define MODULE_STM0 /*lint --e(923)*/ (*(Ifx_STM*)0xF0000000u)

/** \brief  STM object */
#define MODULE_STM1 /*lint --e(923)*/ (*(Ifx_STM*)0xF0000100u)

/** \brief  STM object */
#define MODULE_STM2 /*lint --e(923)*/ (*(Ifx_STM*)0xF0000200u)
/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxLld_Stm_Cfg_Stm0
 * \{  */

/** \brief  FC, Access Enable Register 0 */
#define STM0_ACCEN0 /*lint --e(923)*/ (*(volatile Ifx_STM_ACCEN0*)0xF00000FCu)

/** \brief  F8, Access Enable Register 1 */
#define STM0_ACCEN1 /*lint --e(923)*/ (*(volatile Ifx_STM_ACCEN1*)0xF00000F8u)

/** \brief  2C, Timer Capture Register */
#define STM0_CAP /*lint --e(923)*/ (*(volatile Ifx_STM_CAP*)0xF000002Cu)

/** \brief  54, Timer Capture Register Second View */
#define STM0_CAPSV /*lint --e(923)*/ (*(volatile Ifx_STM_CAPSV*)0xF0000054u)

/** \brief  0, Clock Control Register */
#define STM0_CLC /*lint --e(923)*/ (*(volatile Ifx_STM_CLC*)0xF0000000u)

/** \brief  38, Compare Match Control Register */
#define STM0_CMCON /*lint --e(923)*/ (*(volatile Ifx_STM_CMCON*)0xF0000038u)

/** \brief  30, Compare Register */
#define STM0_CMP0 /*lint --e(923)*/ (*(volatile Ifx_STM_CMP*)0xF0000030u)

/** \brief  34, Compare Register */
#define STM0_CMP1 /*lint --e(923)*/ (*(volatile Ifx_STM_CMP*)0xF0000034u)

/** \brief  3C, Interrupt Control Register */
#define STM0_ICR /*lint --e(923)*/ (*(volatile Ifx_STM_ICR*)0xF000003Cu)

/** \brief  8, Module Identification Register */
#define STM0_ID /*lint --e(923)*/ (*(volatile Ifx_STM_ID*)0xF0000008u)

/** \brief  40, Interrupt Set/Clear Register */
#define STM0_ISCR /*lint --e(923)*/ (*(volatile Ifx_STM_ISCR*)0xF0000040u)

/** \brief  F4, Kernel Reset Register 0 */
#define STM0_KRST0 /*lint --e(923)*/ (*(volatile Ifx_STM_KRST0*)0xF00000F4u)

/** \brief  F0, Kernel Reset Register 1 */
#define STM0_KRST1 /*lint --e(923)*/ (*(volatile Ifx_STM_KRST1*)0xF00000F0u)

/** \brief  EC, Kernel Reset Status Clear Register */
#define STM0_KRSTCLR /*lint --e(923)*/ (*(volatile Ifx_STM_KRSTCLR*)0xF00000ECu)

/** \brief  E8, OCDS Control and Status */
#define STM0_OCS /*lint --e(923)*/ (*(volatile Ifx_STM_OCS*)0xF00000E8u)

/** \brief  10, Timer Register 0 */
#define STM0_TIM0 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM0*)0xF0000010u)

/** \brief  50, Timer Register 0 Second View */
#define STM0_TIM0SV /*lint --e(923)*/ (*(volatile Ifx_STM_TIM0SV*)0xF0000050u)

/** \brief  14, Timer Register 1 */
#define STM0_TIM1 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM1*)0xF0000014u)

/** \brief  18, Timer Register 2 */
#define STM0_TIM2 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM2*)0xF0000018u)

/** \brief  1C, Timer Register 3 */
#define STM0_TIM3 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM3*)0xF000001Cu)

/** \brief  20, Timer Register 4 */
#define STM0_TIM4 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM4*)0xF0000020u)

/** \brief  24, Timer Register 5 */
#define STM0_TIM5 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM5*)0xF0000024u)

/** \brief  28, Timer Register 6 */
#define STM0_TIM6 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM6*)0xF0000028u)
/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxLld_Stm_Cfg_Stm1
 * \{  */

/** \brief  FC, Access Enable Register 0 */
#define STM1_ACCEN0 /*lint --e(923)*/ (*(volatile Ifx_STM_ACCEN0*)0xF00001FCu)

/** \brief  F8, Access Enable Register 1 */
#define STM1_ACCEN1 /*lint --e(923)*/ (*(volatile Ifx_STM_ACCEN1*)0xF00001F8u)

/** \brief  2C, Timer Capture Register */
#define STM1_CAP /*lint --e(923)*/ (*(volatile Ifx_STM_CAP*)0xF000012Cu)

/** \brief  54, Timer Capture Register Second View */
#define STM1_CAPSV /*lint --e(923)*/ (*(volatile Ifx_STM_CAPSV*)0xF0000154u)

/** \brief  0, Clock Control Register */
#define STM1_CLC /*lint --e(923)*/ (*(volatile Ifx_STM_CLC*)0xF0000100u)

/** \brief  38, Compare Match Control Register */
#define STM1_CMCON /*lint --e(923)*/ (*(volatile Ifx_STM_CMCON*)0xF0000138u)

/** \brief  30, Compare Register */
#define STM1_CMP0 /*lint --e(923)*/ (*(volatile Ifx_STM_CMP*)0xF0000130u)

/** \brief  34, Compare Register */
#define STM1_CMP1 /*lint --e(923)*/ (*(volatile Ifx_STM_CMP*)0xF0000134u)

/** \brief  3C, Interrupt Control Register */
#define STM1_ICR /*lint --e(923)*/ (*(volatile Ifx_STM_ICR*)0xF000013Cu)

/** \brief  8, Module Identification Register */
#define STM1_ID /*lint --e(923)*/ (*(volatile Ifx_STM_ID*)0xF0000108u)

/** \brief  40, Interrupt Set/Clear Register */
#define STM1_ISCR /*lint --e(923)*/ (*(volatile Ifx_STM_ISCR*)0xF0000140u)

/** \brief  F4, Kernel Reset Register 0 */
#define STM1_KRST0 /*lint --e(923)*/ (*(volatile Ifx_STM_KRST0*)0xF00001F4u)

/** \brief  F0, Kernel Reset Register 1 */
#define STM1_KRST1 /*lint --e(923)*/ (*(volatile Ifx_STM_KRST1*)0xF00001F0u)

/** \brief  EC, Kernel Reset Status Clear Register */
#define STM1_KRSTCLR /*lint --e(923)*/ (*(volatile Ifx_STM_KRSTCLR*)0xF00001ECu)

/** \brief  E8, OCDS Control and Status */
#define STM1_OCS /*lint --e(923)*/ (*(volatile Ifx_STM_OCS*)0xF00001E8u)

/** \brief  10, Timer Register 0 */
#define STM1_TIM0 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM0*)0xF0000110u)

/** \brief  50, Timer Register 0 Second View */
#define STM1_TIM0SV /*lint --e(923)*/ (*(volatile Ifx_STM_TIM0SV*)0xF0000150u)

/** \brief  14, Timer Register 1 */
#define STM1_TIM1 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM1*)0xF0000114u)

/** \brief  18, Timer Register 2 */
#define STM1_TIM2 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM2*)0xF0000118u)

/** \brief  1C, Timer Register 3 */
#define STM1_TIM3 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM3*)0xF000011Cu)

/** \brief  20, Timer Register 4 */
#define STM1_TIM4 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM4*)0xF0000120u)

/** \brief  24, Timer Register 5 */
#define STM1_TIM5 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM5*)0xF0000124u)

/** \brief  28, Timer Register 6 */
#define STM1_TIM6 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM6*)0xF0000128u)
/** \}  */
/******************************************************************************/
/******************************************************************************/
/** \addtogroup IfxLld_Stm_Cfg_Stm2
 * \{  */

/** \brief  FC, Access Enable Register 0 */
#define STM2_ACCEN0 /*lint --e(923)*/ (*(volatile Ifx_STM_ACCEN0*)0xF00002FCu)

/** \brief  F8, Access Enable Register 1 */
#define STM2_ACCEN1 /*lint --e(923)*/ (*(volatile Ifx_STM_ACCEN1*)0xF00002F8u)

/** \brief  2C, Timer Capture Register */
#define STM2_CAP /*lint --e(923)*/ (*(volatile Ifx_STM_CAP*)0xF000022Cu)

/** \brief  54, Timer Capture Register Second View */
#define STM2_CAPSV /*lint --e(923)*/ (*(volatile Ifx_STM_CAPSV*)0xF0000254u)

/** \brief  0, Clock Control Register */
#define STM2_CLC /*lint --e(923)*/ (*(volatile Ifx_STM_CLC*)0xF0000200u)

/** \brief  38, Compare Match Control Register */
#define STM2_CMCON /*lint --e(923)*/ (*(volatile Ifx_STM_CMCON*)0xF0000238u)

/** \brief  30, Compare Register */
#define STM2_CMP0 /*lint --e(923)*/ (*(volatile Ifx_STM_CMP*)0xF0000230u)

/** \brief  34, Compare Register */
#define STM2_CMP1 /*lint --e(923)*/ (*(volatile Ifx_STM_CMP*)0xF0000234u)

/** \brief  3C, Interrupt Control Register */
#define STM2_ICR /*lint --e(923)*/ (*(volatile Ifx_STM_ICR*)0xF000023Cu)

/** \brief  8, Module Identification Register */
#define STM2_ID /*lint --e(923)*/ (*(volatile Ifx_STM_ID*)0xF0000208u)

/** \brief  40, Interrupt Set/Clear Register */
#define STM2_ISCR /*lint --e(923)*/ (*(volatile Ifx_STM_ISCR*)0xF0000240u)

/** \brief  F4, Kernel Reset Register 0 */
#define STM2_KRST0 /*lint --e(923)*/ (*(volatile Ifx_STM_KRST0*)0xF00002F4u)

/** \brief  F0, Kernel Reset Register 1 */
#define STM2_KRST1 /*lint --e(923)*/ (*(volatile Ifx_STM_KRST1*)0xF00002F0u)

/** \brief  EC, Kernel Reset Status Clear Register */
#define STM2_KRSTCLR /*lint --e(923)*/ (*(volatile Ifx_STM_KRSTCLR*)0xF00002ECu)

/** \brief  E8, OCDS Control and Status */
#define STM2_OCS /*lint --e(923)*/ (*(volatile Ifx_STM_OCS*)0xF00002E8u)

/** \brief  10, Timer Register 0 */
#define STM2_TIM0 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM0*)0xF0000210u)

/** \brief  50, Timer Register 0 Second View */
#define STM2_TIM0SV /*lint --e(923)*/ (*(volatile Ifx_STM_TIM0SV*)0xF0000250u)

/** \brief  14, Timer Register 1 */
#define STM2_TIM1 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM1*)0xF0000214u)

/** \brief  18, Timer Register 2 */
#define STM2_TIM2 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM2*)0xF0000218u)

/** \brief  1C, Timer Register 3 */
#define STM2_TIM3 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM3*)0xF000021Cu)

/** \brief  20, Timer Register 4 */
#define STM2_TIM4 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM4*)0xF0000220u)

/** \brief  24, Timer Register 5 */
#define STM2_TIM5 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM5*)0xF0000224u)

/** \brief  28, Timer Register 6 */
#define STM2_TIM6 /*lint --e(923)*/ (*(volatile Ifx_STM_TIM6*)0xF0000228u)
/** \}  */
/******************************************************************************/
/******************************************************************************/
#endif /* IFXSTM_REG_H */
